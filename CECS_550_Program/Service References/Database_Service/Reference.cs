//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace CECS_550_Program.Database_Service {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/SchedngoService")]
    public partial class Users : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private byte[] AvatarField;
        
        private int ClientIDField;
        
        private string EmailField;
        
        private string ErrorField;
        
        private string FirstNameField;
        
        private string HashField;
        
        private string LastNameField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contacts", Namespace="http://schemas.datacontract.org/2004/07/SchedngoService.Models")]
    public partial class Contacts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private int ClientIDField;
        
        private string EmailField;
        
        private string ErrorField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tasks", Namespace="http://schemas.datacontract.org/2004/07/SchedngoService.Models")]
    public partial class Tasks : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CancelledField;
        
        private string ErrorField;
        
        private string OrganizerFirstNameField;
        
        private int OrganizerIDField;
        
        private string OrganizerLastNameField;
        
        private string TaskAddressField;
        
        private int TaskIDField;
        
        private string TaskNameField;
        
        private System.DateTime TaskTimeField;
        
        private int TypeIDField;
        
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancelled {
            get {
                return this.CancelledField;
            }
            set {
                if ((this.CancelledField.Equals(value) != true)) {
                    this.CancelledField = value;
                    this.RaisePropertyChanged("Cancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizerFirstName {
            get {
                return this.OrganizerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerFirstNameField, value) != true)) {
                    this.OrganizerFirstNameField = value;
                    this.RaisePropertyChanged("OrganizerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizerID {
            get {
                return this.OrganizerIDField;
            }
            set {
                if ((this.OrganizerIDField.Equals(value) != true)) {
                    this.OrganizerIDField = value;
                    this.RaisePropertyChanged("OrganizerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizerLastName {
            get {
                return this.OrganizerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerLastNameField, value) != true)) {
                    this.OrganizerLastNameField = value;
                    this.RaisePropertyChanged("OrganizerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskAddress {
            get {
                return this.TaskAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskAddressField, value) != true)) {
                    this.TaskAddressField = value;
                    this.RaisePropertyChanged("TaskAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TaskTime {
            get {
                return this.TaskTimeField;
            }
            set {
                if ((this.TaskTimeField.Equals(value) != true)) {
                    this.TaskTimeField = value;
                    this.RaisePropertyChanged("TaskTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Database_Service.ISchedService")]
    public interface ISchedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/CreateUser", ReplyAction="http://tempuri.org/ISchedService/CreateUserResponse")]
        System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Users> CreateUserAsync(string FirstName, string LastName, string Phone, string Email, string Address, string UserName, string Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/LoginCheck", ReplyAction="http://tempuri.org/ISchedService/LoginCheckResponse")]
        System.Threading.Tasks.Task<string> LoginCheckAsync(string Email, string Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/AddUserToMeeting", ReplyAction="http://tempuri.org/ISchedService/AddUserToMeetingResponse")]
        System.Threading.Tasks.Task<string> AddUserToMeetingAsync(string FirstName, string LastName, int TaskID, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/CancelMeeting", ReplyAction="http://tempuri.org/ISchedService/CancelMeetingResponse")]
        System.Threading.Tasks.Task<string> CancelMeetingAsync(int MeetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/GetAllUsersInvitedToMeeting", ReplyAction="http://tempuri.org/ISchedService/GetAllUsersInvitedToMeetingResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Users>> GetAllUsersInvitedToMeetingAsync(int TaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/GetContactInfo", ReplyAction="http://tempuri.org/ISchedService/GetContactInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Contacts>> GetContactInfoAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/GetMeetingInfoForUser", ReplyAction="http://tempuri.org/ISchedService/GetMeetingInfoForUserResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Tasks>> GetMeetingInfoForUserAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/GetSpecificMeetingInfo", ReplyAction="http://tempuri.org/ISchedService/GetSpecificMeetingInfoResponse")]
        System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Tasks> GetSpecificMeetingInfoAsync(int TaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/GetUser", ReplyAction="http://tempuri.org/ISchedService/GetUserResponse")]
        System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Users> GetUserAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/InsertContact", ReplyAction="http://tempuri.org/ISchedService/InsertContactResponse")]
        System.Threading.Tasks.Task<string> InsertContactAsync(int ClientID, string FirstName, string LastName, string Phone, string Email, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/InsertTask", ReplyAction="http://tempuri.org/ISchedService/InsertTaskResponse")]
        System.Threading.Tasks.Task<string> InsertTaskAsync(int ClientID, string TypeName, System.DateTime Time, string Address, string TaskName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/RemoveUserFromMeeting", ReplyAction="http://tempuri.org/ISchedService/RemoveUserFromMeetingResponse")]
        System.Threading.Tasks.Task<string> RemoveUserFromMeetingAsync(int MeetingID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/UpdateUser", ReplyAction="http://tempuri.org/ISchedService/UpdateUserResponse")]
        System.Threading.Tasks.Task<string> UpdateUserAsync(int ClientID, string Phone, string Address, string UserName, byte[] Avatar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedService/UpdatePassword", ReplyAction="http://tempuri.org/ISchedService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<string> UpdatePasswordAsync(int ClientID, string Hash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchedServiceChannel : CECS_550_Program.Database_Service.ISchedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchedServiceClient : System.ServiceModel.ClientBase<CECS_550_Program.Database_Service.ISchedService>, CECS_550_Program.Database_Service.ISchedService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SchedServiceClient() : 
                base(SchedServiceClient.GetDefaultBinding(), SchedServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISchedService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SchedServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SchedServiceClient.GetBindingForEndpoint(endpointConfiguration), SchedServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SchedServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SchedServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SchedServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SchedServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SchedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Users> CreateUserAsync(string FirstName, string LastName, string Phone, string Email, string Address, string UserName, string Hash) {
            return base.Channel.CreateUserAsync(FirstName, LastName, Phone, Email, Address, UserName, Hash);
        }
        
        public System.Threading.Tasks.Task<string> LoginCheckAsync(string Email, string Hash) {
            return base.Channel.LoginCheckAsync(Email, Hash);
        }
        
        public System.Threading.Tasks.Task<string> AddUserToMeetingAsync(string FirstName, string LastName, int TaskID, string Email) {
            return base.Channel.AddUserToMeetingAsync(FirstName, LastName, TaskID, Email);
        }
        
        public System.Threading.Tasks.Task<string> CancelMeetingAsync(int MeetingID) {
            return base.Channel.CancelMeetingAsync(MeetingID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Users>> GetAllUsersInvitedToMeetingAsync(int TaskID) {
            return base.Channel.GetAllUsersInvitedToMeetingAsync(TaskID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Contacts>> GetContactInfoAsync(int ClientId) {
            return base.Channel.GetContactInfoAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<CECS_550_Program.Database_Service.Tasks>> GetMeetingInfoForUserAsync(int ClientID) {
            return base.Channel.GetMeetingInfoForUserAsync(ClientID);
        }
        
        public System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Tasks> GetSpecificMeetingInfoAsync(int TaskID) {
            return base.Channel.GetSpecificMeetingInfoAsync(TaskID);
        }
        
        public System.Threading.Tasks.Task<CECS_550_Program.Database_Service.Users> GetUserAsync(string Email) {
            return base.Channel.GetUserAsync(Email);
        }
        
        public System.Threading.Tasks.Task<string> InsertContactAsync(int ClientID, string FirstName, string LastName, string Phone, string Email, string Address) {
            return base.Channel.InsertContactAsync(ClientID, FirstName, LastName, Phone, Email, Address);
        }
        
        public System.Threading.Tasks.Task<string> InsertTaskAsync(int ClientID, string TypeName, System.DateTime Time, string Address, string TaskName) {
            return base.Channel.InsertTaskAsync(ClientID, TypeName, Time, Address, TaskName);
        }
        
        public System.Threading.Tasks.Task<string> RemoveUserFromMeetingAsync(int MeetingID, int ClientID) {
            return base.Channel.RemoveUserFromMeetingAsync(MeetingID, ClientID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserAsync(int ClientID, string Phone, string Address, string UserName, byte[] Avatar) {
            return base.Channel.UpdateUserAsync(ClientID, Phone, Address, UserName, Avatar);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePasswordAsync(int ClientID, string Hash) {
            return base.Channel.UpdatePasswordAsync(ClientID, Hash);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISchedService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISchedService)) {
                return new System.ServiceModel.EndpointAddress("http://74.136.104.121:2121/SchedngoService/SchedService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return SchedServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISchedService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return SchedServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISchedService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ISchedService,
        }
    }
}
